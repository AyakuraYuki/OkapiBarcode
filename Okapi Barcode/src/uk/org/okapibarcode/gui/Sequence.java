/*
 * Copyright 2014 Robin Stuart
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package uk.org.okapibarcode.gui;

import java.awt.event.TextListener;
import java.awt.event.TextEvent;
import java.io.File;
import javax.swing.JFileChooser;

/**
 * Batch process a set of barcode encodings
 * 
 * @author Robin Stuart <rstuart114@gmail.com>
 */
public class Sequence extends javax.swing.JFrame {

    /**
     * Creates new form Sequence
     */
    public Sequence() {
        initComponents();
        
        TextListener tl = new TextListener() {
            @Override
            public void textValueChanged(TextEvent e) {
                if (sequenceArea.getText().isEmpty()) {
                    exportButton.setEnabled(false);
                } else {
                    exportButton.setEnabled(true);
                }
            }
        };
        sequenceArea.addTextListener(tl);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createSequenceBox = new javax.swing.JPanel();
        startValueField = new javax.swing.JTextField();
        endValueField = new javax.swing.JTextField();
        incrementValueField = new javax.swing.JTextField();
        formatField = new javax.swing.JTextField();
        startValueLabel = new javax.swing.JLabel();
        endValueLabel = new javax.swing.JLabel();
        incrementLabel = new javax.swing.JLabel();
        formatLabel = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        importButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        createLabel = new javax.swing.JLabel();
        importLabel = new javax.swing.JLabel();
        exportLabel = new javax.swing.JLabel();
        sequencePreviewBox = new javax.swing.JPanel();
        resetButton = new javax.swing.JButton();
        sequenceArea = new java.awt.TextArea();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sequence Export");
        setResizable(false);

        createSequenceBox.setBorder(javax.swing.BorderFactory.createTitledBorder("Create Sequence"));

        startValueField.setText("1");

        endValueField.setText("10");

        incrementValueField.setText("1");

        formatField.setText("$$$$$$");

        startValueLabel.setText("Start Value:");

        endValueLabel.setText("End Value:");

        incrementLabel.setText("Increment By:");

        formatLabel.setText("Format:");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        importButton.setText("Import...");
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        exportButton.setText("Export...");
        exportButton.setEnabled(false);
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        createLabel.setText("Sequence:");

        importLabel.setText("Sequence File:");

        exportLabel.setText("Generate Bar Codes:");

        javax.swing.GroupLayout createSequenceBoxLayout = new javax.swing.GroupLayout(createSequenceBox);
        createSequenceBox.setLayout(createSequenceBoxLayout);
        createSequenceBoxLayout.setHorizontalGroup(
            createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(createSequenceBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createSequenceBoxLayout.createSequentialGroup()
                        .addComponent(startValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(startValueField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createSequenceBoxLayout.createSequentialGroup()
                        .addComponent(endValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(endValueField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createSequenceBoxLayout.createSequentialGroup()
                        .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(incrementLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(formatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(importLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exportLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(exportButton, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(incrementValueField)
                            .addComponent(formatField)
                            .addComponent(importButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        createSequenceBoxLayout.setVerticalGroup(
            createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createSequenceBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startValueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endValueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(incrementValueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(incrementLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formatLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(createLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importButton)
                    .addComponent(importLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createSequenceBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportButton)
                    .addComponent(exportLabel))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        sequencePreviewBox.setBorder(javax.swing.BorderFactory.createTitledBorder("Sequence Preview"));

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sequencePreviewBoxLayout = new javax.swing.GroupLayout(sequencePreviewBox);
        sequencePreviewBox.setLayout(sequencePreviewBoxLayout);
        sequencePreviewBoxLayout.setHorizontalGroup(
            sequencePreviewBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sequencePreviewBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sequencePreviewBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sequencePreviewBoxLayout.createSequentialGroup()
                        .addGap(0, 79, Short.MAX_VALUE)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sequenceArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        sequencePreviewBoxLayout.setVerticalGroup(
            sequencePreviewBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sequencePreviewBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sequenceArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton)
                .addContainerGap())
        );

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createSequenceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sequencePreviewBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(createSequenceBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sequencePreviewBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // Clear sequence
        sequenceArea.setText("");
    }//GEN-LAST:event_resetButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // Close window
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        // Create a sequence
        int start;
        int stop;
        int step;
        int i;
        String resultant = "";
        
        try {
            start = Integer.parseInt(startValueField.getText());
            stop = Integer.parseInt(endValueField.getText());
            step = Integer.parseInt(incrementValueField.getText());
        } catch (NumberFormatException nfe) {
            System.out.println("Invalid input value");
            return;
        }
        
        if (step <= 0) {
            System.out.println("Invalid increment value");
            return;
        }
        
        if (start >= stop) {
            System.out.println("Invalid sequence");
            return;
        }
        
        for (i = start; i <= stop; i += step) {
            resultant += applyFormat(Integer.toString(i));
            resultant += '\n';
        }
        
        sequenceArea.setText(resultant);
    }//GEN-LAST:event_createButtonActionPerformed

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        // Load batch data from file
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                sequenceArea.setText(OpenFile.ReadFile(file, true));
            } catch (Exception e) {
                System.out.println("Cannot read from file" + fileChooser.getSelectedFile().toString());
            }
        }
    }//GEN-LAST:event_importButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        // Launch export window
        Export ex = new Export();
        ex.setLocationRelativeTo(Sequence.this);
        ex.setVisible(true);
    }//GEN-LAST:event_exportButtonActionPerformed

    private String applyFormat(String rawNumber) {
        String format = formatField.getText();
        String adjusted = "";
        String reversed = "";
        
        int formatLength, inputLength, i, position;
	char formatChar;
	
	inputLength = rawNumber.length();
	formatLength = format.length();
	
	position = inputLength;
	
	for(i = formatLength; i > 0; i--) {
		formatChar = format.charAt(i - 1);
		switch(formatChar) {
			case '#':
				if (position > 0) {
					adjusted += rawNumber.charAt(position - 1);
					position--;
				} else {
					adjusted += ' ';
				}
				break;
			case '$':
				if (position > 0) {
					adjusted += rawNumber.charAt(position - 1);
					position--;
				} else {
					adjusted += '0';
				}
				break;
			case '*':
				if (position > 0) {
					adjusted += rawNumber.charAt(position - 1);
					position--;
				} else {
					adjusted += '*';
				}
				break;
			default:
				adjusted += formatChar;
				break;
		}
	}
	
	for(i = formatLength; i > 0; i--) {
		reversed += adjusted.charAt(i - 1);
	}
        
        return reversed;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sequence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sequence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sequence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sequence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sequence().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton createButton;
    private javax.swing.JLabel createLabel;
    private javax.swing.JPanel createSequenceBox;
    private javax.swing.JTextField endValueField;
    private javax.swing.JLabel endValueLabel;
    private javax.swing.JButton exportButton;
    private javax.swing.JLabel exportLabel;
    private javax.swing.JTextField formatField;
    private javax.swing.JLabel formatLabel;
    private javax.swing.JButton importButton;
    private javax.swing.JLabel importLabel;
    private javax.swing.JLabel incrementLabel;
    private javax.swing.JTextField incrementValueField;
    private javax.swing.JButton resetButton;
    private java.awt.TextArea sequenceArea;
    private javax.swing.JPanel sequencePreviewBox;
    private javax.swing.JTextField startValueField;
    private javax.swing.JLabel startValueLabel;
    // End of variables declaration//GEN-END:variables
}
