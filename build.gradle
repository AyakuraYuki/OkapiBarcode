apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

group = 'uk.org.okapibarcode'
archivesBaseName = 'okapibarcode'
version = '0.4.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.beust:jcommander:1.82'
    testImplementation 'com.google.zxing:javase:3.5.0'
    testImplementation 'org.reflections:reflections:0.9.10'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
compileJava.options.release = 8
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'
javadoc.options.addStringOption('Xdoclint:none', '-quiet')

jar {
    dependsOn 'check'
    manifest.attributes(
        'Main-Class': 'uk.org.okapibarcode.OkapiBarcode',
        'Implementation-Title': 'Okapi Barcode',
        'Implementation-Version': project.version
    )
}

// enable JaCoCo XML output for Codecov, and exclude GUI classes from the coverage reports
jacocoTestReport {
    reports {
        xml.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'uk/org/okapibarcode/*.class',
                'uk/org/okapibarcode/gui/**/*.class'
            ])
        }))
    }
}

wrapper {
    gradleVersion = '7.5.1'
}

/*------------------------------------------------------------------------------------------------*/
/*                         CONFIGURATION FOR UPLOAD TO MAVEN CENTRAL REPO                         */
/*                                                                                                */
/* The signing credentials and Sonatype OSSRH credentials must be in the gradle.properties file.  */
/* Upload to Maven Central with the command "gradlew publish".                                    */
/* - https://docs.gradle.org/current/userguide/publishing_maven.html                              */
/* - http://central.sonatype.org/pages/ossrh-guide.html                                           */
/* - http://central.sonatype.org/pages/gradle.html                                                */
/*                                                                                                */
/*------------------------------------------------------------------------------------------------*/

apply plugin: 'maven-publish'
apply plugin: 'signing'

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'okapibarcode'
            from components.java
            pom {
                name = 'Okapi Barcode'
                description = 'An open-source barcode generator written entirely in Java, supporting over 50 encoding standards including all ISO standards.'
                url = 'https://github.com/woo-j/OkapiBarcode'
                scm {
                    connection = 'scm:git:git://github.com/woo-j/OkapiBarcode.git'
                    url = 'https://github.com/woo-j/OkapiBarcode'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'woo-j'
                        name = 'Robin Stuart'
                    }
                    developer {
                        id = 'gredler'
                        name = 'Daniel Gredler'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
